docker.enabled    = true
docker.runOptions = '-u $(id -u):$(id -g)'

// Global default params, used in configs
params {
    input = false
    atlas = false
    outdir = 'results_mouse'
    run_denoising = true
    run_eddy = false
    run_n4 = true
    lean_output = true
}


process {
    withName: "DENOISING_MPPCA" {
        ext.extent = 3
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "PREPROC_SINGLEEDDY" {
        ext.eddy_cmd = "eddy_cpu"
        ext.encoding = "y"
        ext.readout = 0.01536
        ext.extra_args = ""
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: {
                filename ->
                if ( filename.contains("bvec") ) { "${meta.id}_desc-preproc_dwi.bvec" }
                else if ( filename.contains("bval") ) {"${meta.id}_desc-preproc_dwi.bval"}
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "MOUSE_BETDWI" {
        ext.threshold = 0.3
        ext.dwi_shell_tolerance = 20
        ext.min_fodf_shell_value = 500
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
           saveAs: {
                filename ->
                if ( filename.contains("bvec") && !params.run_eddy) { "${meta.id}_desc-preproc_dwi.bvec" }
                else if ( filename.contains("bval") && !params.run_eddy) { "${meta.id}_desc-preproc_dwi.bval" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "MOUSE_N4" {
        ext.threshold=0.001
        ext.convergence = "150x150x150x150"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "RESAMPLE_DWI" {
        ext.iso_min = true
        ext.interp = "lin"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: {
                filename ->
                if ( filename.contains("_resampled.nii.gz") ) { "${meta.id}_desc-preproc_dwi.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "RESAMPLE_MASK" {
        ext.iso_min = true
        ext.interp = "nn"
        ext.first_suffix = "mask"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/anat/"},
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.lean_output ? false : true
        ]
    }

    withName: "MOUSE_REGISTRATION" {
        ext.laplacian_value = "0.1mm"
        ext.atlas_50_resolution = "50"
        ext.atlas_100_resolution = "100"
        ext.atlas_resolution = ""
        publishDir = [
            path: { "${params.outdir}/${meta.id}/anat/"},
            saveAs: {
                filename ->
                if ( filename.contains("ANO.nii.gz") ) { "${meta.id}_desc-preproc_ANO.nii.gz"}
                else if ( filename.contains("ANO_LR.nii.gz") ) { "${meta.id}_desc-preproc_ANOLR.nii.gz"}
                else if ( filename.contains("moving_check") ) { "${meta.id}_desc-preproc_AMBAref.nii.gz"}
                else if ( filename.contains("0GenericAffine.mat") ) { "${meta.id}_from-template_to-dwi_affine.mat"}
                else if ( filename.contains("1Warp.nii.gz") ) { "${meta.id}_from-template_to-dwi_warp.nii.gz"}
                else if ( filename.contains("1InverseWarp.nii.gz") ) { "${meta.id}_from-dwi_to-template_warp.nii.gz"}
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "IMAGE_CONVERT" {
        ext.datatype = "uint8"
        ext.first_suffix = "mask"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/anat/"},
            saveAs: {
                filename ->
                if ( filename.contains("_converted.nii.gz") ) { "${meta.id}_desc-preproc_mask.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "RECONST_DTIMETRICS" {
        ext.ad = true
        ext.evecs = true
        ext.evals = true
        ext.fa = true
        ext.ga = true
        ext.rgb = true
        ext.md = true
        ext.mode = true
        ext.norm = true
        ext.rd = true
        ext.tensor = true
        ext.nonphysical = true
        ext.pulsation = true
        ext.residual = true
        ext.b0_thr_extract_b0 = 10
        ext.dwi_shell_tolerance = 50
        ext.max_dti_shell_value = 3500
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: {
                filename ->
                if ( filename.contains("ad.nii.gz") ) { "${meta.id}_ad.nii.gz" }
                else if ( filename.contains("fa.nii.gz") ) { "${meta.id}_fa.nii.gz" }
                else if ( filename.contains("rd.nii.gz") ) { "${meta.id}_rd.nii.gz" }
                else if ( filename.contains("md.nii.gz") ) { "${meta.id}_md.nii.gz" }
                else if ( filename.contains("mode.nii.gz") ) { "${meta.id}_mode.nii.gz" }
                else if ( filename.contains("tensor.nii.gz") ) { "${meta.id}_tensor.nii.gz" }
                else if ( filename.contains("rgb.nii.gz") ) { "${meta.id}_rgb.nii.gz" }
                else if ( filename.contains("ga.nii.gz") ) { "${meta.id}_ga.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "RECONST_FRF" {
        ext.nvox_min = 50
        ext.max_dti_shell_value = 3500
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: {
                filename ->
                if ( filename.contains("__frf.txt") ) { "${meta.id}_frf.txt" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "RECONST_FODF" {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: { filename -> 
                if ( filename.contains("__fodf.nii.gz") ) { "${meta.id}_fodf.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "TRACKING_MASK" {
        ext.ventricules_labels_ids="82 401 748 800 961 962 963 1092 1107 1132 1145 1146"
        ext.seeding_labels_ids="1138 1139 1140 1141 1142 1173 1174 1179 1182 1205"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/anat/"},
            saveAs: {
                filename ->
                if ( filename.contains("seeding_mask") ) { "${meta.id}_desc-seeding_mask.nii.gz" }
                else if ( filename.contains("tracking_mask") ) { "${meta.id}_desc-tracking_mask.nii.gz" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "TRACKING_LOCALTRACKING" {
        ext.rk_order = 4
        ext.local_compress_streamlines=false
        ext.run_local_tracking=true
        ext.local_algo="prob"
        ext.local_seeding="npv"
        ext.local_nbr_seeds=1
        ext.local_step=0.05
        ext.local_theta=20
        ext.local_rk_order=2
        ext.local_sfthres=0.1
        ext.local_sfthres_init=0.5
        ext.local_min_len=3
        ext.local_max_len=15
        ext.local_compress_value=0.2
        ext.local_tracking_mask_type="wm"
        ext.local_seeding_mask_type="fa"
        ext.local_fa_seeding_mask_threshold="0"
        ext.local_fa_tracking_mask_threshold="0"
        ext.cmd="scil_tracking_local_dev.py"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/dwi/"},
            saveAs: {
                filename ->
                if ( filename.contains("local_tracking.trk") ) { "${meta.id}_desc-local_tracking.nii.gz" }
                else if ( filename.contains("seeding_mask") ) { "${meta.id}_label-seeding_desc-local_mask.nii.gz" }
                else if ( filename.contains("tracking_mask") ) { "${meta.id}_label-tracking_desc-local_mask.nii.gz"}
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "MOUSE_EXTRACTMASKS" {
        ext.labels_dup = "FRP MO SS GU VISC AUD VIS ACA PL ILA ORB AI RSP PTLp Tea PERI ECT MOB AOB AON TT DP PIR NLOT COA TR CA DG IG ENT PAR POST PRE SUB ProS HATA APr CLA EP LA BLA BMA PA CP ACB FS OT LSS LSX sAMY PAL TH HY MB P MY CBX CBN fiber_tracts"
        ext.labels = "FRP MO SS GU VISC Tea fiber_tracts"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/anat/"},
            saveAs: {
                filename ->
                if ( filename.contains("masks") ) { "${meta.id}_masks" }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "MOUSE_VOLUMEROISTATS" {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/stats/"},
            saveAs: {
                filename ->
                if ( filename.contains("stats") ) { "${meta.id}_stats.json" }
                else { params.lean_output ? null : filename }
            }
        ]
    }
}
